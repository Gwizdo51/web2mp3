name: "tools"

networks:
  net:
    driver: "bridge"
    name: "web2mp3_tools"

services:

  # used to pull Composer dependencies (app/vendor/)
  composer:
    container_name: "web2mp3_tools_composer"
    networks:
    - "net"
    build:
      context: "../"
      target: "app_image"
      # args:
      #   UID: 1000
      #   GID: 1000
      #   USERNAME: "user"
    image: "web2mp3/app"
    volumes:
    - "../../app:/var/www"
    # run as the user that cloned the repository (replace if necessary)
    user: "1000:1000"
    # entrypoint: "bash"
    entrypoint: "composer"
    command:
    - "install"

  # used to access the Laravel installer
  # to create a new project :
  # docker compose run --rm laravel new app
  laravel:
    container_name: "web2mp3_tools_laravel"
    networks:
    - "net"
    build:
      context: "../"
      target: "laravel_image"
    image: "web2mp3/laravel"
    volumes:
    - "../..:/var/www"
    # run as the user that cloned the repository (replace if necessary)
    user: "1000:1000"
    # entrypoint: "bash"
    # entrypoint: "/root/.composer/vendor/laravel/installer/bin/laravel"

  # used to pull NodeJS dependencies (app/node_modules/)
  node:
    container_name: "web2mp3_tools_node"
    networks:
    - "net"
    image: "node:24.4.0"
    working_dir: "/app"
    volumes:
    - "../../app:/app"
    # entrypoint: "bash"
    # run as the user that cloned the repository (replace if necessary)
    user: "1000:1000"
    command:
    - "npm"
    - "install"

  # used to create a SSL/TLS certificate
  certificate_generator:
    container_name: "web2mp3_tools_certificate_generator"
    networks:
    - "net"
    build:
      context: "../"
      target: "certificate_generator_image"
    image: "web2mp3/certificate_generator"
    # run as the user that cloned the repository (replace if necessary)
    user: "1000:1000"
    volumes:
    - "/srv/docker_data/web2mp3/certs:/mnt" # modify if necessary
    # entrypoint: "bash"
    command:
    - "req"
    - "-x509"
    - "-nodes"
    - "-days"
    - "365"
    - "-newkey"
    - "rsa:2048"
    - "-keyout"
    - "/mnt/self.key"
    - "-out"
    - "/mnt/self.crt"
    - "-subj"
    - "/C=FR/ST=Dev/L=Local/O=LocalDev/OU=Dev/CN=yt2mp3.100.100.151.68.nip.io"

  # SQLite command line tools
  sqlite_cli:
    container_name: "web2mp3_tools_sqlite_cli"
    networks:
    - "net"
    build:
      context: "../"
      target: "sqlite_cli_image"
    image: "web2mp3/sqlite_cli"
    user: "1000:1000"
    volumes:
    - "/srv/docker_data/web2mp3/sqlite:/sqlite" # modify if necessary
    working_dir: "/sqlite"
    command:
    - "-line" # set output mode to 'line'
    - "database.sqlite"
